<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ojsystem.dao.ExamMapper">

    <resultMap id="BaseExamResultMap" type="com.example.ojsystem.entity.Exam">
        <id column="examId" jdbcType="BIGINT" property="examId" />
        <result column="examStartTime" jdbcType="VARCHAR" property="examStartTime" />
        <result column="examEndTime" jdbcType="VARCHAR" property="examEndTime" />
        <result column="examName" jdbcType="VARCHAR" property="examName" />
        <result column="examType" jdbcType="VARCHAR" property="examType" />
        <result column="examLanguage" jdbcType="VARCHAR" property="examLanguage" />
        <association property="classes" javaType="com.example.ojsystem.entity.Classes">
            <id column="classesId" jdbcType="BIGINT" property="classesId" />
            <result column="classesName" jdbcType="VARCHAR" property="classesName" />
        </association>
        <association property="teacher" javaType="com.example.ojsystem.entity.Teacher">
            <id column="teacherId" jdbcType="BIGINT" property="teacherId" />
            <result column="teacherName" jdbcType="VARCHAR" property="teacherName" />
        </association>
    </resultMap>


    <insert id="addExamInfo"  parameterType="com.example.ojsystem.entity.Exam" useGeneratedKeys="true" keyProperty="exam.examId" keyColumn="examId">
        insert into exam(examStartTime,examEndTime,teacherId,classesId,examType,examLanguage,examName)
        values(#{exam.examStartTime},#{exam.examEndTime},#{exam.teacher.teacherId},#{exam.classes.classesId},#{exam.examType},#{exam.examLanguage},#{exam.examName})
    </insert>
    <update id="modifyExamInfo" parameterType="com.example.ojsystem.entity.Exam">
             update exam set examStartTime=#{exam.examStartTime},examEndTime=#{exam.examEndTime},
              examLanguage=#{exam.examLanguage},classesId=#{exam.classes.classesId},examName=#{exam.examName} where examId=#{exam.examId}
    </update>
    <update id="updateExamType" parameterType="com.example.ojsystem.entity.Exam">
        update exam set examType=#{exam.examType} where examId=#{exam.examId}
    </update>
    <delete id="deleteExamInfo" parameterType="java.lang.Integer">
        delete from exam where examId=#{examId}
    </delete>
    <select id="queryExamInfoByStudentId" resultType="com.example.ojsystem.entity.Exam" resultMap="BaseExamResultMap">
       select * from exam,student where exam.classesId=student.classesId and student.studentId=#{studentId}
    </select>
    <select id="teacherQueryExamInfo" resultType="com.example.ojsystem.entity.Exam" resultMap="BaseExamResultMap">
         select * from exam,classes where teacherId=#{teacherId} and exam.classesId=classes.classesId
    </select>
    <select id="queryExamInfo" resultType="com.example.ojsystem.entity.Exam" resultMap="BaseExamResultMap">
         select * from exam,teacher,classes where exam.teacherId=teacher.teacherId and exam.classesId=classes.classesId ORDER BY (case exam.examType when 'Pending' then 3 when 'Running' then 2 else 1 end) DESC
    </select>
    <select id="queryExamInfoByExamId" resultType="com.example.ojsystem.entity.Exam" parameterType="java.lang.Integer">
        select * from exam where examId=#{examId}
    </select>
    <select id="queryNotFinishedExamInfo" resultType="com.example.ojsystem.entity.Exam">
         select * from exam where examType='Pending' or examType='Running'
    </select>
    <select id="searchExamInfo" resultType="com.example.ojsystem.entity.Exam" resultMap="BaseExamResultMap">
        select * from exam,teacher,classes
        where exam.teacherId=teacher.teacherId and exam.classesId=classes.classesId
        <if test="exam.examName != null and exam.examName!=''">
            and exam.examName =#{exam.examName}
        </if>
        <if test="exam.examType != null and exam.examType!=''">
            and exam.examType =#{exam.examType}
        </if>
        <if test="exam.teacher.teacherName != null and exam.teacher.teacherName!=''">
            and teacher.teacherName =#{exam.teacher.teacherName}
        </if>
        ORDER BY (case exam.examType when 'Pending' then 3 when 'Running' then 2 else 1 end) DESC
    </select>

</mapper>