<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ojsystem.dao.ExamMapper">

    <resultMap id="BaseExamResultMap" type="com.example.ojsystem.entity.Exam">
        <id column="examId" jdbcType="INTEGER" property="examId" />
        <result column="examStartTime" jdbcType="VARCHAR" property="examStartTime" />
        <result column="examEndTime" jdbcType="VARCHAR" property="examEndTime" />
        <result column="examName" jdbcType="VARCHAR" property="examName" />
        <result column="examStatus" jdbcType="VARCHAR" property="examStatus" />
        <result column="examLanguage" jdbcType="VARCHAR" property="examLanguage" />
        <result column="examChoiceQuestionScore" jdbcType="INTEGER" property="examChoiceQuestionScore" />
        <result column="examCompletionQuestionScore" jdbcType="INTEGER" property="examCompletionQuestionScore" />
        <result column="examProgrammingScore" jdbcType="INTEGER" property="examProgrammingScore" />
        <association property="group" javaType="com.example.ojsystem.entity.Group">
            <id column="groupId" jdbcType="BIGINT" property="groupId" />
            <result column="groupName" jdbcType="VARCHAR" property="groupName" />
        </association>
        <association property="user" javaType="com.example.ojsystem.entity.User">
            <id column="userId" jdbcType="BIGINT" property="userId" />
            <result column="userName" jdbcType="VARCHAR" property="userName" />
        </association>
    </resultMap>


    <insert id="insertExamInfo"  parameterType="com.example.ojsystem.entity.Exam" useGeneratedKeys="true" keyProperty="exam.examId" keyColumn="examId">
        insert into exam(examStartTime,examEndTime,userId,groupId,examStatus,examLanguage,examName,examChoiceQuestionScore,examCompletionQuestionScore,examProgrammingScore)
        values(#{exam.examStartTime},#{exam.examEndTime},#{exam.user.userId},#{exam.group.groupId},#{exam.examStatus},#{exam.examLanguage},#{exam.examName},#{exam.examChoiceQuestionScore},#{exam.examCompletionQuestionScore},#{exam.examProgrammingScore})
    </insert>
    <update id="updateExamInfo" parameterType="com.example.ojsystem.entity.Exam">
             update exam set examStartTime=#{exam.examStartTime},examEndTime=#{exam.examEndTime},examStatus=#{exam.examStatus},
              examLanguage=#{exam.examLanguage},groupId=#{exam.group.groupId},examName=#{exam.examName},examChoiceQuestionScore=#{exam.examChoiceQuestionScore},examCompletionQuestionScore=#{exam.examCompletionQuestionScore},examProgrammingScore=#{exam.examProgrammingScore} where examId=#{exam.examId}
    </update>
    <update id="updateExamStatus" parameterType="com.example.ojsystem.entity.Exam">
        update exam set examStatus=#{exam.examStatus} where examId=#{exam.examId}
    </update>
    <delete id="deleteExamInfo" parameterType="java.lang.Integer">
        delete from exam where examId=#{examId}
    </delete>
    <select id="selectExamInfoByUserId" resultType="com.example.ojsystem.entity.Exam" resultMap="BaseExamResultMap">
      select * from exam,`group`,usergroup where exam.groupId=`group`.groupId and `group`.groupId=usergroup.groupId and usergroup.userId=#{userId} ORDER BY (case exam.examStatus when 'Pending' then 3 when 'Running' then 2 else 1 end) DESC
    </select>
    <select id="selectUserQueryExamInfo" resultType="com.example.ojsystem.entity.Exam" resultMap="BaseExamResultMap">
         select * from exam,examusergrouphistory where exam.userId=#{userId} and exam.groupId=examusergrouphistory.groupId and exam.examId =examusergrouphistory.examId ORDER BY (case exam.examStatus when 'Pending' then 3 when 'Running' then 2 else 1 end) DESC
    </select>
    <select id="selectExamInfo" resultType="com.example.ojsystem.entity.Exam" resultMap="BaseExamResultMap">
         select * from exam,user,examusergrouphistory where exam.userId=user.userId and exam.groupId=examusergrouphistory.groupId and exam.examId =examusergrouphistory.examId ORDER BY (case exam.examStatus when 'Pending' then 3 when 'Running' then 2 else 1 end) DESC
    </select>
    <select id="selectExamInfoByExamId" resultType="com.example.ojsystem.entity.Exam" parameterType="java.lang.Integer">
        select * from exam where examId=#{examId}
    </select>
    <select id="selectNotFinishedExamInfo" resultType="com.example.ojsystem.entity.Exam">
         select * from exam where examStatus='Pending' or examStatus='Running'
    </select>
    <select id="selectSearchExamInfo" resultType="com.example.ojsystem.entity.Exam" resultMap="BaseExamResultMap">
        select * from exam,user
        where exam.userId=user.userId
        <if test="exam.examName != null and exam.examName!=''">
            and exam.examName like #{exam.examName}
        </if>
        <if test="exam.examStatus != null and exam.examStatus!=''">
            and exam.examStatus =#{exam.examStatus}
        </if>
        <if test="exam.user.userName != null and exam.user.userName!=''">
            and user.userName like #{exam.user.userName}
        </if>
        ORDER BY (case exam.examStatus when 'Pending' then 3 when 'Running' then 2 else 1 end) DESC
    </select>

</mapper>