<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ojsystem.dao.ExerciseHistoryMapper">

    <resultMap id="BaseExerciseHistoryResultMap" type="com.example.ojsystem.entity.ExerciseHistory">
        <id column="exerciseHistoryId" jdbcType="BIGINT" property="exerciseHistoryId" />
        <result column="exerciseSubmitTime" jdbcType="VARCHAR" property="exerciseSubmitTime" />
        <result column="exerciseResult" jdbcType="VARCHAR" property="exerciseResult" />
        <result column="exerciseSubmitLanguage" jdbcType="VARCHAR" property="exerciseSubmitLanguage" />
        <result column="exerciseCode" jdbcType="VARCHAR" property="exerciseCode" />
        <association property="user" javaType="com.example.ojsystem.entity.User">
            <id column="userId" jdbcType="BIGINT" property="userId" />
            <result column="userName" jdbcType="VARCHAR" property="userName" />
        </association>
        <association property="exercise" javaType="com.example.ojsystem.entity.Exercise">
            <id column="exerciseId" jdbcType="BIGINT" property="exerciseId" />
        </association>
    </resultMap>
    <insert id="addCodeInfo" parameterType="com.example.ojsystem.entity.ExerciseHistory" >
           insert into exercisehistory(studentId,exerciseId,exerciseSubmitTime,exerciseSubmitLanguage,exerciseCode)
            values(#{exerciseHistory.student.studentId},#{exerciseHistory.exercise.exerciseId},#{exerciseHistory.exerciseSubmitTime},#{exerciseHistory.exerciseSubmitLanguage},#{exerciseHistory.exerciseCode})
    </insert>
    <select id="queryExerciseRealTimeStatusInfo" resultType="com.example.ojsystem.entity.ExerciseHistory" resultMap="BaseExerciseHistoryResultMap">
            select * from exercisehistory,user where exercisehistory.userId=user.userId
            <if test="exerciseHistory.exercise.exerciseId != null and exerciseHistory.exercise.exerciseId!=0">
                and exercisehistory.exerciseId =#{exerciseHistory.exercise.exerciseId}
            </if>
            <if test="exerciseHistory.user.userName!= null and exerciseHistory.user.userName!=''">
                and user.userName like #{exerciseHistory.user.userName}
            </if>
            <if test="exerciseHistory.exerciseResult != null and exerciseHistory.exerciseResult!=''">
                and exerciseHistory.exerciseResult =#{exerciseHistory.exerciseResult}
            </if>
            <if test="exerciseHistory.exerciseSubmitLanguage != null and exerciseHistory.exerciseSubmitLanguage!=''">
                and exerciseHistory.exerciseSubmitLanguage =#{exerciseHistory.exerciseSubmitLanguage}
            </if>
                order by exercisehistory.exerciseSubmitTime DESC
    </select>
    <select id="queryExerciseStatisticsInfo" resultType="com.example.ojsystem.entity.ExerciseHistory" resultMap="BaseExerciseHistoryResultMap">
         select  * from exercisehistory,student where exercisehistory.studentId=student.studentId and exercisehistory.exerciseId =#{exerciseId} and exerciseResult="accept" GROUP BY exercisehistory.studentId order by exerciseSubmitTime
    </select>
    <select id="queryUserExerciseIsSuccess" resultType="java.lang.Integer">
        select count(*)  from exercisehistory where exerciseId=#{exerciseId} and userId=#{userId} and exerciseResult='success'
    </select>
    <select id="queryCodeInfoByExerciseHistoryId" resultType="java.lang.String" parameterType="java.lang.Integer" >
        select exerciseCode from exercisehistory where exerciseHistoryId=#{exerciseHistoryId}
    </select>
    <select id="queryExerciseIdByUserId" resultType="java.lang.Integer">
        select exerciseId from exercisehistory where exerciseId not in (select distinct exerciseId from exercisehistory where userId=#{userId} and exerciseResult="accept") and studentId=#{studentId}
    </select>
    <select id="queryExerciseResultInfo" resultType="com.example.ojsystem.entity.ResultTool">
        SELECT exerciseResult,count(*) as number FROM `exercisehistory` where exerciseId=#{exerciseId} group BY exerciseResult
    </select>


</mapper>